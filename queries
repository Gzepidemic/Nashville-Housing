/*
Cleaning Data in MySQL
*/

SELECT *
FROM NashvilleHousing;


-- Standardize Data Format

SELECT SaleDate
FROM NashvilleHousing;





--------------------------------------------------------------------------------------------------------------------------





-- Populate Property Address data

SELECT *
FROM NashvilleHousing
-- WHERE PropertyAddress IS NULL;
ORDER BY ParcelID;


SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress
FROM NashvilleHousing a
JOIN NashvilleHousing b
ON a.ParcelID = b.ParcelID
AND a.UniqueID <> b.UniqueID
WHERE a.PropertyAddress = '';


UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM NashvilleHousing a
JOIN NashvilleHousing b
ON a.ParcelID = b.ParcelID
AND a.UniqueID <> b.UniqueID
WHERE a.PropertyAddress = '';





--------------------------------------------------------------------------------------------------------------------------




-- Breaking out Address Into Individual Columns (Address, City, State)

SELECT PropertyAddress
FROM NashvilleHousing;
-- WHERE PropertyAddress IS NULL;
-- ORDER BY ParcelID;


SELECT 
SUBSTRING(PropertyAddress, 1, LOCATE(',',PropertyAddress) -1) AS Address,
SUBSTRING(PropertyAddress, LOCATE(',',PropertyAddress) +1) AS City
FROM NashvilleHousing;



ALTER TABLE NashvilleHousing
ADD PropertySplitAddress Nvarchar(255);

Update NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, LOCATE(',',PropertyAddress) -1);


ALTER TABLE NashvilleHousing
ADD PropertySplitCity Nvarchar(255);


Update NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, LOCATE(',',PropertyAddress) +1);


SELECT *
FROM NashvilleHousing;





SELECT OwnerAddress
FROM NashvilleHousing;


SELECT
SUBSTRING(OwnerAddress, 1, LOCATE(',' , OwnerAddress) -1) AS Address,
SUBSTRING_INDEX(SUBSTRING_INDEX(OwnerAddress, ',' , 2), ',', -1) AS City,
SUBSTRING(OwnerAddress, -2, LOCATE(',' , OwnerAddress) -1) AS State
FROM NashvilleHousing;





ALTER TABLE NashvilleHousing
ADD OwnerSplitAddress Nvarchar(255);

Update NashvilleHousing
SET OwnerSplitAddress = SUBSTRING(OwnerAddress, 1, LOCATE(',' , OwnerAddress) -1);




ALTER TABLE NashvilleHousing
ADD OwnerSplitCity Nvarchar(255);

Update NashvilleHousing
SET OwnerSplitCity = SUBSTRING_INDEX(SUBSTRING_INDEX(OwnerAddress, ',' , 2), ',', -1);




ALTER TABLE NashvilleHousing
ADD OwnerSplitState Nvarchar(255);

Update NashvilleHousing
SET OwnerSplitState = SUBSTRING(OwnerAddress, -2, LOCATE(',' , OwnerAddress) -1);





------------------------------------------------------------------------------------------------------------------------





-- Change Y and N to Yes and No in "Sold as Vacant" field

Select Distinct(SoldAsVacant), COUNT(SoldAsVacant)
FROM NashvilleHousing
GROUP BY SoldAsVacant
ORDER BY 2;


SELECT SoldAsVacant,
CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	 WHEN SoldAsVacant = 'N' THEN 'No'
     ELSE SoldAsVacant
     END
FROM NashvilleHousing;


UPDATE NashvilleHousing
SET SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	 WHEN SoldAsVacant = 'N' THEN 'No'
     ELSE SoldAsVacant
     END;




------------------------------------------------------------------------------------------------------------------------




-- Remove Duplicates

WITH RowNumCTE AS (
SELECT *,
	ROW_NUMBER() OVER(
    PARTITION BY ParcelID,
				 PropertyAddress,
                 SalePrice,
                 SaleDate,
                 LegalReference
				 ORDER BY UniqueID
                 ) row_num
FROM NashvilleHousing
-- ORDER BY ParcelID;
)
SELECT *
FROM RowNumCTE
WHERE row_num > 1;
-- ORDER BY PropertyAddress;



SELECT *
FROM NashvilleHousing;


WITH RowNumCTE AS (
SELECT UniqueID, 
	ROW_NUMBER() OVER (
		PARTITION BY ParcelID, 
					 PropertyAddress, 
					 SalePrice,
                     saledate,
                     LegalReference
                     
        ORDER BY UniqueID
        ) AS rownum
FROM NashvilleHousing
)
DELETE hd
FROM NashvilleHousing hd 
INNER JOIN RowNumCTE r ON hd.UniqueID = r.UniqueID
WHERE rownum>1;





------------------------------------------------------------------------------------------------------------------------




-- Delete Unused Columns

SELECT *
FROM NashvilleHousing;

ALTER TABLE NashvilleHousing
DROP COLUMN OwnerAddress,
DROP COLUMN PropertyAddress,
DROP COLUMN TaxDistrict;

ALTER TABLE NashvilleHousing
DROP COLUMN SaleDate;
